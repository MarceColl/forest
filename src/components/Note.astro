---
import { getEntry } from 'astro:content';
const { name } = Astro.props;

type Props = { name: string };

const note = await getEntry('note', name);
const { Content } = await note.render();
import mushroom1 from '../../public/mushroom-01.png';
import mushroom2 from '../../public/mushroom-02.png';
import mushroom3 from '../../public/mushroom-03.png';
import mushroom4 from '../../public/mushroom-04.png';
import mushroom5 from '../../public/mushroom-05.png';
import mushroom6 from '../../public/mushroom-06.png';

const mushrooms = [
  mushroom1,
  mushroom2,
  mushroom3,
  mushroom4,
  mushroom5,
  mushroom6
];

const mushroom = mushrooms[Math.floor(Math.random() * mushrooms.length)]
---

<div class="note">
    <img class="mushroom-top"src={mushroom.src} width="64" height="70" alt="A pixel art image of a mushroom" />
    <details open="true">
        <summary>
            <span>
            <img class="mushroom-header" src={mushroom.src} width="64" height="70" alt="A pixel art image of a mushroom" />
            <h1>{note.data.title}</h1>
            </span>
            { name != "main" && <span class="close-note" hx-get="data:text/html," hx-trigger="click" hx-target="closest .note" hx-swap="delete">[close]</span> }
        </summary>
        <Content />
    </details>
<div>

<style>
.mushroom-top {
    display: none;
}

.note {
    display: flex;
    max-width: 450px;
    flex-direction: column;
    align-items: center;
}

details {
    width: 100%;
    margin: 1em;
    margin-bottom: 0em;
}

.close-note {
    color: var(--accent);

    &:hover {
        color: var(--accent-hl);
    }
}

img {
    height: 64px;
}

summary {
    position: sticky;
    top: 0;
    left: -30px;
    background-color: var(--primary);
    list-style: none;
    display: flex;
    justify-content: space-between;
    flex-direction: row;
    align-items: center;
    gap: 1em;
    max-width: 450px;
    margin-botton: 1em;

    & > span {
        display: flex;
        align-items: center;
        gap: 1em;

        & > h1 {
            margin: 0.4em;
        }
    }
}

@media (max-width: 720px) {
    .mushroom-header {
        display: none;
    }

    .mushroom-top {
        display: revert;
    }

    summary {
        justify-content: center;

        & > span {
            flex-direction: column;
            justify-content: center;
            gap: 0em;
        }
    }
}
</style>
