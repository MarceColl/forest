---
import { getEntry } from 'astro:content';
import { getBacklinks } from '../backlinks';
import L from '../components/L.astro';
let { name, initial } = Astro.props;

initial ||= false;

type Props = { name: string, initial: boolean };

const note = await getEntry('note', name);
const backlinks = getBacklinks(name);
const { Content } = await note.render();
import branch from '../../public/branch.png';
---


<div class="note">
    <details open="true">
        <summary>
            <span>
                <h1>{note.data.title}</h1>
            </span>
            { !initial && <span class="close-note" hx-get="data:text/html," hx-trigger="click" hx-target="closest .note" hx-swap="delete">[close]</span> }
        </summary>
        <div class="content">
            <Content />
            { backlinks.length > 0 &&
             <div>
              <h3>Backlinks</h3>
              <div class="backlinks">
              { backlinks.filter(item => item).map((item) => (
               <L name={item} isBacklink={true} />
               ))}
              </div>
             </div>
            }
        </div>
    </details>
<div>

<style>
.mushroom-top { display: none; }

.backlinks {
    display: flex;
    gap: 0.4em;
    font-size: 0.8em;
}

.note {
    display: flex;
    max-width: 450px;
    flex-direction: column;
    align-items: center;
}

details {
    width: 100%;
    margin: 1em;
    margin-bottom: 0em;
}

details[open] {
    margin-bottom: 2em;
}

.close-note {
    color: var(--accent);

    &:hover {
        color: var(--accent-hl);
    }
}

img {
    transform: rotate(90deg);
    height: 120px;
    width: 40px;
}

summary {
    position: sticky;
    top: 0;
    left: -30px;
    background-color: var(--primary);
    display: flex;
    justify-content: space-between;
    flex-direction: row;
    align-items: center;
    gap: 1em;
    max-width: 450px;
    margin-botton: 1em;

    &::-webkit-details-marker {
        display: none;
    }

    &::marker {
        display: none;
    }

    & > span {
        display: flex;
        align-items: center;
        gap: 3em;
    }
}

svg {
    fill: var(--accent);
    position: relative;
    right: -20px;

    &:hover {
        fill: var(--accent-hl);
    }
}

@media (max-width: 720px) {
    .mushroom-header {
        display: none;
    }

    .mushroom-top {
        display: revert;
    }

    summary {
        justify-content: center;
        flex-direction: column;
        gap: 0;

        & > span {
            flex-direction: column;
            justify-content: center;
            gap: 0;

            & > h1 {
                margin: 0.8em;
            }
        }

        & .close-note {
            margin-bottom: 0.4em;
        }
    }
}
</style>
